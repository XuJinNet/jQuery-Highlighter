(function(c){function i(a,b){this.settings=a;this.dom=b;this.originalValue=null;this.shouldDelayReinit=this.didInsertDefaultText=false}function j(a){if(""!==a)(new Image).src=a}function g(a){return a.replace(/^\s+/,"").replace(/\s+$/,"")}function h(a){if(undefined===a||null===a)return false;if(0===a.length)return false;return true}c.fn.editInPlace=function(a){var b=c.extend({},c.fn.editInPlace.defaults,a);if(!(b.url||b.callback))throw Error("Need to set either url: or callback: option for the inline editor to work.");
j(b.saving_image);return this.each(function(){var d=c(this);if(!d.data("editInPlace")){d.data("editInPlace",true);(new i(b,d)).init()}})};c.fn.editInPlace.defaults={url:"",bg_over:"#ffc",bg_out:"transparent",hover_class:"",show_buttons:false,save_button:'<button class="inplace_save">Save</button>',cancel_button:'<button class="inplace_cancel">Cancel</button>',params:"",field_type:"text",default_text:"(Click here to add text)",use_html:false,textarea_rows:10,textarea_cols:25,select_text:"Choose new value",
select_options:"",text_size:null,saving_text:undefined,saving_image:"",saving_animation_color:"transparent",value_required:false,element_id:"element_id",update_value:"update_value",original_value:"original_value",original_html:"original_html",save_if_nothing_changed:false,on_blur:"save",cancel:"",callback:null,callback_skip_dom_reset:false,success:null,error:null,error_sink:function(a,b){alert(b)},preinit:null,postclose:null,delegate:null};c.extend(i.prototype,{init:function(){this.setDefaultTextIfNeccessary();
this.connectOpeningEvents()},reinit:function(){if(!this.shouldDelayReinit){this.triggerCallback(this.settings.postclose,this.dom);this.triggerDelegateCall("didCloseEditInPlace");this.markEditorAsInactive();this.connectOpeningEvents()}},setDefaultTextIfNeccessary:function(){if(""===this.dom.html()){this.dom.html(this.settings.default_text);this.didInsertDefaultText=true}},connectOpeningEvents:function(){var a=this;this.dom.bind("mouseenter.editInPlace",function(){a.addHoverEffect()}).bind("mouseleave.editInPlace",
function(){a.removeHoverEffect()}).bind("click.editInPlace",function(b){a.openEditor(b)})},disconnectOpeningEvents:function(){this.dom.unbind(".editInPlace")},addHoverEffect:function(){this.settings.hover_class?this.dom.addClass(this.settings.hover_class):this.dom.css("background-color",this.settings.bg_over)},removeHoverEffect:function(){this.settings.hover_class?this.dom.removeClass(this.settings.hover_class):this.dom.css("background-color",this.settings.bg_out)},openEditor:function(a){if(this.shouldOpenEditor(a)){this.workAroundFirefoxBlurBug();
this.disconnectOpeningEvents();this.removeHoverEffect();this.removeInsertedDefaultTextIfNeccessary();this.saveOriginalValue();this.markEditorAsActive();this.replaceContentWithEditor();this.connectOpeningEventsToEditor();this.triggerDelegateCall("didOpenEditInPlace")}},shouldOpenEditor:function(a){if(this.isClickedObjectCancelled(a.target))return false;if(false===this.triggerCallback(this.settings.preinit,this.dom))return false;if(false===this.triggerDelegateCall("shouldOpenEditInPlace",true,a))return false;
return true},removeInsertedDefaultTextIfNeccessary:function(){if(!(!this.didInsertDefaultText||this.dom.html()!==this.settings.default_text)){this.dom.html("");this.didInsertDefaultText=false}},isClickedObjectCancelled:function(a){if(!this.settings.cancel)return false;return 0!==c(a).parents().andSelf().filter(this.settings.cancel).length},saveOriginalValue:function(){this.originalValue=this.settings.use_html?this.dom.html():g(this.dom.text())},restoreOriginalValue:function(){this.setClosedEditorContent(this.originalValue)},
setClosedEditorContent:function(a){this.settings.use_html?this.dom.html(a):this.dom.text(a)},workAroundFirefoxBlurBug:function(){c.browser.mozilla&&this.dom.parents(":last").find(".editInPlace-active :input").blur()},replaceContentWithEditor:function(){var a=this.settings.show_buttons?this.settings.save_button+" "+this.settings.cancel_button:"",b=this.createEditorElement();this.dom.html('<form class="inplace_form" style="display: inline; margin: 0; padding: 0;"></form>').find("form").append(b).append(a)},
createEditorElement:function(){if(-1===c.inArray(this.settings.field_type,["text","textarea","select"]))throw"Unknown field_type <fnord>, supported are 'text', 'textarea' and 'select'";var a=null;if("select"===this.settings.field_type)a=this.createSelectEditor();else if("text"===this.settings.field_type)a=c('<input type="text" '+this.inputNameAndClass()+' size="'+this.settings.text_size+'" />');else if("textarea"===this.settings.field_type)a=c("<textarea "+this.inputNameAndClass()+' rows="'+this.settings.textarea_rows+
'"  cols="'+this.settings.textarea_cols+'" />');a.val(this.triggerDelegateCall("willOpenEditInPlace",this.originalValue));return a},inputNameAndClass:function(){return' name="inplace_value" class="inplace_field" '},createSelectEditor:function(){var a=c("<select"+this.inputNameAndClass()+'><option disabled="true" value="">'+this.settings.select_text+"</option></select>"),b=this.settings.select_options;c.isArray(b)||(b=b.split(","));for(var d=0;d<b.length;d++){var e=b[d];c.isArray(e)||(e=e.split(":"));
var f=g(e[1]||e[0]);e=g(e[0]);f=c("<option "+(f==this.originalValue?'selected="selected" ':"")+" ></option>").val(f).text(e);a.append(f)}return a},connectOpeningEventsToEditor:function(){function a(f){d.handleCancelEditor(f);return false}function b(f){d.handleSaveEditor(f);return false}var d=this,e=this.dom.find("form");e.find(".inplace_field").focus().select();e.find(".inplace_cancel").click(a);e.find(".inplace_save").click(b);if(!this.settings.show_buttons){"save"===this.settings.on_blur?e.find(".inplace_field").blur(b):
e.find(".inplace_field").blur(a);c.browser.mozilla&&this.bindSubmitOnEnterInInput()}e.keyup(function(f){if(27===f.which)return a()});c.browser.safari&&this.bindSubmitOnEnterInInput();e.submit(b)},bindSubmitOnEnterInInput:function(){if("textarea"!==this.settings.field_type){var a=this;this.dom.find(":input").keyup(function(b){if(13===b.which)return a.dom.find("form").submit()})}},handleCancelEditor:function(a){if(false!==this.triggerDelegateCall("shouldCloseEditInPlace",true,a)){a=this.dom.find(":input").val();
a=this.triggerDelegateCall("willCloseEditInPlace",a);this.restoreOriginalValue();h(a)&&!this.isDisabledDefaultSelectChoice()&&this.setClosedEditorContent(a);this.reinit()}},handleSaveEditor:function(a){if(false!==this.triggerDelegateCall("shouldCloseEditInPlace",true,a)){var b=this.dom.find(":input").val();b=this.triggerDelegateCall("willCloseEditInPlace",b);if(this.isDisabledDefaultSelectChoice()||this.isUnchangedInput(b))this.handleCancelEditor(a);else if(this.didForgetRequiredText(b)){this.handleCancelEditor(a);
this.reportError("Error: You must enter a value to save this field")}else{this.showSaving(b);this.settings.callback?this.handleSubmitToCallback(b):this.handleSubmitToServer(b)}}},didForgetRequiredText:function(a){return this.settings.value_required&&(""===a||undefined===a||null===a)},isDisabledDefaultSelectChoice:function(){return this.dom.find("option").eq(0).is(":selected:disabled")},isUnchangedInput:function(a){return!this.settings.save_if_nothing_changed&&this.originalValue===a},showSaving:function(a){if(!(this.settings.callback&&
this.settings.callback_skip_dom_reset)){a=a;if(h(this.settings.saving_text))a=this.settings.saving_text;if(h(this.settings.saving_image))a=c("<img />").attr("src",this.settings.saving_image).attr("alt",a);this.dom.html(a)}},handleSubmitToCallback:function(a){this.enableOrDisableAnimationCallbacks(true,false);var b=this.triggerCallback(this.settings.callback,this.id(),a,this.originalValue,this.settings.params,this.savingAnimationCallbacks());if(!this.settings.callback_skip_dom_reset)if(undefined===
b){this.reportError("Error: Failed to save value: "+a);this.restoreOriginalValue()}else this.dom.html(b);if(this.didCallNoCallbacks()){this.enableOrDisableAnimationCallbacks(false,false);this.reinit()}},handleSubmitToServer:function(a){a=this.settings.update_value+"="+encodeURIComponent(a)+"&"+this.settings.element_id+"="+this.dom.attr("id")+(this.settings.params?"&"+this.settings.params:"")+"&"+this.settings.original_html+"="+encodeURIComponent(this.originalValue)+"&"+this.settings.original_value+
"="+encodeURIComponent(this.originalValue);this.enableOrDisableAnimationCallbacks(true,false);this.didStartSaving();var b=this;c.ajax({url:b.settings.url,type:"POST",data:a,dataType:"html",complete:function(){b.didEndSaving()},success:function(d){b.dom.html(d||b.settings.default_text);b.triggerCallback(b.settings.success,d)},error:function(d){b.dom.html(b.originalHTML);b.settings.error?b.triggerCallback(b.settings.error,d):b.reportError("Failed to save value: "+d.responseText||"Unspecified Error")}})},
triggerCallback:function(a){if(a){var b=Array.prototype.splice.call(arguments,1);return a.apply(this.dom[0],b)}},triggerDelegateCall:function(a,b,d){if(!this.settings.delegate||!c.isFunction(this.settings.delegate[a]))return b;a=this.settings.delegate[a](this.dom,this.settings,d);return undefined===a?b:a},reportError:function(a){this.triggerCallback(this.settings.error_sink,this.id(),a)},id:function(){return this.dom.attr("id")},markEditorAsActive:function(){this.dom.addClass("editInPlace-active")},
markEditorAsInactive:function(){this.dom.removeClass("editInPlace-active")},savingAnimationCallbacks:function(){var a=this;return{didStartSaving:function(){a.didStartSaving()},didEndSaving:function(){a.didEndSaving()}}},enableOrDisableAnimationCallbacks:function(a,b){this.didStartSaving.enabled=a;this.didEndSaving.enabled=b},didCallNoCallbacks:function(){return this.didStartSaving.enabled&&!this.didEndSaving.enabled},assertCanCall:function(a){if(!this[a].enabled)throw Error("Cannot call "+a+" now. See documentation for details.");
},didStartSaving:function(){this.assertCanCall("didStartSaving");this.shouldDelayReinit=true;this.enableOrDisableAnimationCallbacks(false,true);this.startSavingAnimation()},didEndSaving:function(){this.assertCanCall("didEndSaving");this.shouldDelayReinit=false;this.enableOrDisableAnimationCallbacks(false,false);this.reinit();this.stopSavingAnimation()},startSavingAnimation:function(){var a=this;this.dom.animate({backgroundColor:this.settings.saving_animation_color},400).animate({backgroundColor:"transparent"},
400,"swing",function(){setTimeout(function(){a.startSavingAnimation()},10)})},stopSavingAnimation:function(){this.dom.stop(true).css({backgroundColor:""})},missingCommaErrorPreventer:""})})(jQuery);
